// Code generated by MockGen. DO NOT EDIT.
// Source: app/usecases/loan_usecase.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "billing-engine/app/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLoanUsecase is a mock of LoanUsecase interface.
type MockLoanUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockLoanUsecaseMockRecorder
}

// MockLoanUsecaseMockRecorder is the mock recorder for MockLoanUsecase.
type MockLoanUsecaseMockRecorder struct {
	mock *MockLoanUsecase
}

// NewMockLoanUsecase creates a new mock instance.
func NewMockLoanUsecase(ctrl *gomock.Controller) *MockLoanUsecase {
	mock := &MockLoanUsecase{ctrl: ctrl}
	mock.recorder = &MockLoanUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoanUsecase) EXPECT() *MockLoanUsecaseMockRecorder {
	return m.recorder
}

// CreateLoan mocks base method.
func (m *MockLoanUsecase) CreateLoan(totalAmount, InstallmentAmount float64, InstallmentType string) (*models.Loan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLoan", totalAmount, InstallmentAmount, InstallmentType)
	ret0, _ := ret[0].(*models.Loan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLoan indicates an expected call of CreateLoan.
func (mr *MockLoanUsecaseMockRecorder) CreateLoan(totalAmount, InstallmentAmount, InstallmentType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLoan", reflect.TypeOf((*MockLoanUsecase)(nil).CreateLoan), totalAmount, InstallmentAmount, InstallmentType)
}

// GetLoanByID mocks base method.
func (m *MockLoanUsecase) GetLoanByID(loanID uint) (*models.Loan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoanByID", loanID)
	ret0, _ := ret[0].(*models.Loan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLoanByID indicates an expected call of GetLoanByID.
func (mr *MockLoanUsecaseMockRecorder) GetLoanByID(loanID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoanByID", reflect.TypeOf((*MockLoanUsecase)(nil).GetLoanByID), loanID)
}

// UpdateLoan mocks base method.
func (m *MockLoanUsecase) UpdateLoan(loanID uint, totalAmount, InstallmentAmount float64, InstallmentType string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateLoan", loanID, totalAmount, InstallmentAmount, InstallmentType)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateLoan indicates an expected call of UpdateLoan.
func (mr *MockLoanUsecaseMockRecorder) UpdateLoan(loanID, totalAmount, InstallmentAmount, InstallmentType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateLoan", reflect.TypeOf((*MockLoanUsecase)(nil).UpdateLoan), loanID, totalAmount, InstallmentAmount, InstallmentType)
}
