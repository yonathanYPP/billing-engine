// Code generated by MockGen. DO NOT EDIT.
// Source: app/service/loan_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	viewmodels "billing-engine/app/viewmodels"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLoanService is a mock of LoanService interface.
type MockLoanService struct {
	ctrl     *gomock.Controller
	recorder *MockLoanServiceMockRecorder
}

// MockLoanServiceMockRecorder is the mock recorder for MockLoanService.
type MockLoanServiceMockRecorder struct {
	mock *MockLoanService
}

// NewMockLoanService creates a new mock instance.
func NewMockLoanService(ctrl *gomock.Controller) *MockLoanService {
	mock := &MockLoanService{ctrl: ctrl}
	mock.recorder = &MockLoanServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoanService) EXPECT() *MockLoanServiceMockRecorder {
	return m.recorder
}

// CreateWeeklyLoan mocks base method.
func (m *MockLoanService) CreateWeeklyLoan(totalAmount float64, weekNumber int) (*viewmodels.LoanViewmodel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWeeklyLoan", totalAmount, weekNumber)
	ret0, _ := ret[0].(*viewmodels.LoanViewmodel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWeeklyLoan indicates an expected call of CreateWeeklyLoan.
func (mr *MockLoanServiceMockRecorder) CreateWeeklyLoan(totalAmount, weekNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWeeklyLoan", reflect.TypeOf((*MockLoanService)(nil).CreateWeeklyLoan), totalAmount, weekNumber)
}

// GetLoanByID mocks base method.
func (m *MockLoanService) GetLoanByID(loanID uint) (*viewmodels.LoanViewmodel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoanByID", loanID)
	ret0, _ := ret[0].(*viewmodels.LoanViewmodel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLoanByID indicates an expected call of GetLoanByID.
func (mr *MockLoanServiceMockRecorder) GetLoanByID(loanID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoanByID", reflect.TypeOf((*MockLoanService)(nil).GetLoanByID), loanID)
}

// GetPendingWeeklyPayment mocks base method.
func (m *MockLoanService) GetPendingWeeklyPayment(loanID uint) (*viewmodels.PendingPaymentViewmodel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPendingWeeklyPayment", loanID)
	ret0, _ := ret[0].(*viewmodels.PendingPaymentViewmodel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPendingWeeklyPayment indicates an expected call of GetPendingWeeklyPayment.
func (mr *MockLoanServiceMockRecorder) GetPendingWeeklyPayment(loanID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPendingWeeklyPayment", reflect.TypeOf((*MockLoanService)(nil).GetPendingWeeklyPayment), loanID)
}

// MakePayment mocks base method.
func (m *MockLoanService) MakePayment(loanID uint, totalPaidAmount float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakePayment", loanID, totalPaidAmount)
	ret0, _ := ret[0].(error)
	return ret0
}

// MakePayment indicates an expected call of MakePayment.
func (mr *MockLoanServiceMockRecorder) MakePayment(loanID, totalPaidAmount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakePayment", reflect.TypeOf((*MockLoanService)(nil).MakePayment), loanID, totalPaidAmount)
}
